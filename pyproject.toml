[project]
authors = [{ name = "r1cheu", email = "chenrulei@cemps.ac.cn" }]
dependencies = ["numpy", "pandas", "statsmodels", "scipy"]
description = "Simple package for quantitative genetic analysis."
name = "quangpy"
requires-python = ">= 3.11"
version = "0.1.2"
readme = { file = "README.md", content-type = "text/markdown" }
license = { file = "LICENSE" }
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
]


[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[project.optional-dependencies]
dev = ["pre-commit"]

[tool.pixi.pypi-dependencies]
quangpy = { path = ".", editable = true }

[tool.pixi.tasks]

[tool.pixi.feature.dev.tasks]
lint = "pre-commit run --all-files"


[tool.pixi.dependencies]
statsmodels = ">=0.14.3,<0.15"
numpy = ">=2.1.1,<3"
pandas = ">=2.2.3,<3"
python = ">=3.12.6,<4"
scipy = ">=1.14.1,<2"

[tool.pixi.feature.jupyter.dependencies]
jupyterlab = "*"
pixi-kernel = "*"


[tool.pixi.environments]
juptyer = { features = ["jupyter"], solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }

[tool.pixi.feature.jupyter.tasks]
jupyter = "jupyter lab --port 8000"


[tool.ruff.lint]
extend-select = [
  "B",   # flake8-bugbear
  "I",   # isort
  "ARG", # flake8-unused-arguments
  "C4",  # flake8-comprehensions
  "EM",  # flake8-errmsg
  "ICN", # flake8-import-conventions
  "G",   # flake8-logging-format
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
  "PL",  # pylint
  "PT",  # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "RET", # flake8-return
  "RUF", # Ruff-specific
  "SIM", # flake8-simplify
  "T20", # flake8-print
  "UP",  # pyupgrade
  "YTT", # flake8-2020
  "EXE", # flake8-executable
  "NPY", # NumPy specific rules
  "PD",  # pandas-vet
]
ignore = [
  "PLR09",   # Too many X
  "PLR2004", # Magic comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]

[tool.numpydoc_validation]
checks = [
  "all",  # report on all checks, except the below
  "EX01",
  "SA01",
  "ES01",
]
# remember to use single quotes for regex in TOML
exclude = [ # don't report on objects that match any of these regex
  '\.undocumented_method$',
  '\.__repr__$',
  '\.__init__$',
]
override_SS05 = [ # override SS05 to allow docstrings starting with these words
  '^Process ',
  '^Assess ',
  '^Access ',
]
